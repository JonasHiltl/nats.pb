// Code generated by protoc-gen-nats. DO NOT EDIT.

package example

import (
	"context"
	"time"

	natspb "github.com/jonashiltl/natspb"
	proto "google.golang.org/protobuf/proto"
)

type ExampleServiceClient interface {
	Echo(ctx context.Context, in *Hello, timeout time.Duration) (*Hello, error)
}

type exampleServiceClient struct {
	tr natspb.Transport
}

func NewExampleServiceClient(tr natspb.Transport) ExampleServiceClient {
	return &exampleServiceClient{tr}
}

type invokeParams struct {
	ctx     context.Context
	subj    string
	in      proto.Message
	timeout time.Duration
	out     proto.Message
}

func (c *exampleServiceClient) invoke(params invokeParams) error {
	b, err := proto.Marshal(params.in)
	if err != nil {
		return err
	}

	msg, err := c.tr.Request(params.subj, b, params.timeout)
	if err != nil {
		return err
	}

	err = proto.Unmarshal(msg.Data, params.out)
	if err != nil {
		return err
	}
	return nil
}

func (c *exampleServiceClient) Echo(ctx context.Context, in *Hello, timeout time.Duration) (*Hello, error) {
	out := new(Hello)
	params := invokeParams{
		ctx:     ctx,
		subj:    "echo.echo",
		in:      in,
		timeout: timeout,
		out:     out,
	}
	err := c.invoke(params)
	if err != nil {
		return nil, err
	}
	return out, nil
}
